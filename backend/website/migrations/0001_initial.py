# Generated by Django 5.2.6 on 2025-09-12 18:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug URL')),
                ('content', models.TextField(verbose_name='Contenu')),
                ('excerpt', models.CharField(max_length=300, verbose_name='Extrait')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='blog/', verbose_name='Image vedette')),
                ('author', models.CharField(default='Marino ATOHOUN', max_length=100, verbose_name='Auteur')),
                ('category', models.CharField(choices=[('ai', 'Intelligence Artificielle'), ('tech', 'Technologie'), ('company', 'Entreprise'), ('projects', 'Projets'), ('tutorials', 'Tutoriels')], max_length=50, verbose_name='Catégorie')),
                ('tags', models.CharField(blank=True, max_length=200, verbose_name='Tags (séparés par des virgules)')),
                ('is_published', models.BooleanField(default=False, verbose_name='Publié')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Article vedette')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('published_date', models.DateTimeField(blank=True, null=True, verbose_name='Date de publication')),
            ],
            options={
                'verbose_name': 'Article de Blog',
                'verbose_name_plural': 'Articles de Blog',
                'ordering': ['-published_date'],
            },
        ),
        migrations.CreateModel(
            name='CompanyInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='BlackBenAI', max_length=100, verbose_name="Nom de l'entreprise")),
                ('tagline', models.CharField(max_length=200, verbose_name='Slogan')),
                ('description', models.TextField(verbose_name='Description')),
                ('mission', models.TextField(verbose_name='Mission')),
                ('vision', models.TextField(verbose_name='Vision')),
                ('founded_date', models.DateField(verbose_name='Date de fondation')),
                ('founder', models.CharField(default='Marino ATOHOUN', max_length=100, verbose_name='Fondateur')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company/', verbose_name='Logo')),
                ('hero_image', models.ImageField(blank=True, null=True, upload_to='company/', verbose_name='Image héro')),
            ],
            options={
                'verbose_name': 'Information Entreprise',
                'verbose_name_plural': 'Informations Entreprise',
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('subject', models.CharField(max_length=200, verbose_name='Sujet')),
                ('message', models.TextField(verbose_name='Message')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone')),
                ('company', models.CharField(blank=True, max_length=100, verbose_name='Entreprise')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('is_read', models.BooleanField(default=False, verbose_name='Lu')),
            ],
            options={
                'verbose_name': 'Message de Contact',
                'verbose_name_plural': 'Messages de Contact',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(verbose_name='Description')),
                ('short_description', models.CharField(max_length=200, verbose_name='Description courte')),
                ('date', models.DateTimeField(verbose_name='Date et heure')),
                ('location', models.CharField(max_length=200, verbose_name='Lieu')),
                ('event_type', models.CharField(choices=[('conference', 'Conférence'), ('workshop', 'Atelier'), ('launch', 'Lancement'), ('partnership', 'Partenariat'), ('other', 'Autre')], max_length=50, verbose_name="Type d'événement")),
                ('image', models.ImageField(blank=True, null=True, upload_to='events/', verbose_name='Image')),
                ('registration_url', models.URLField(blank=True, null=True, verbose_name="URL d'inscription")),
                ('is_featured', models.BooleanField(default=False, verbose_name='Événement vedette')),
            ],
            options={
                'verbose_name': 'Événement',
                'verbose_name_plural': 'Événements',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=200, verbose_name='Question')),
                ('answer', models.TextField(verbose_name='Réponse')),
                ('category', models.CharField(choices=[('general', 'Général'), ('services', 'Services'), ('projects', 'Projets'), ('technical', 'Technique'), ('billing', 'Facturation')], max_length=50, verbose_name='Catégorie')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Question vedette')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQ',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='JobPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Titre du poste')),
                ('department', models.CharField(choices=[('tech', 'Technique'), ('management', 'Direction'), ('hr', 'Ressources Humaines'), ('marketing', 'Marketing'), ('sales', 'Ventes')], max_length=50, verbose_name='Département')),
                ('description', models.TextField(verbose_name='Description du poste')),
                ('requirements', models.TextField(verbose_name='Exigences')),
                ('benefits', models.TextField(verbose_name='Avantages')),
                ('location', models.CharField(max_length=100, verbose_name='Lieu')),
                ('employment_type', models.CharField(choices=[('full_time', 'Temps plein'), ('part_time', 'Temps partiel'), ('contract', 'Contrat'), ('internship', 'Stage')], max_length=50, verbose_name="Type d'emploi")),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
            ],
            options={
                'verbose_name': 'Poste à Pourvoir',
                'verbose_name_plural': 'Postes à Pourvoir',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterSubscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Nom')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('subscribed_date', models.DateTimeField(auto_now_add=True, verbose_name="Date d'abonnement")),
            ],
            options={
                'verbose_name': 'Abonné Newsletter',
                'verbose_name_plural': 'Abonnés Newsletter',
                'ordering': ['-subscribed_date'],
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du partenaire')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('logo', models.ImageField(upload_to='partners/', verbose_name='Logo')),
                ('website_url', models.URLField(blank=True, null=True, verbose_name='Site web')),
                ('partnership_type', models.CharField(choices=[('strategic', 'Stratégique'), ('technology', 'Technologique'), ('academic', 'Académique'), ('investor', 'Investisseur'), ('client', 'Client')], max_length=50, verbose_name='Type de partenariat')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Partenaire',
                'verbose_name_plural': 'Partenaires',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du projet')),
                ('description', models.TextField(verbose_name='Description détaillée')),
                ('short_description', models.CharField(max_length=200, verbose_name='Description courte')),
                ('technology_stack', models.CharField(max_length=200, verbose_name='Technologies utilisées')),
                ('features', models.TextField(verbose_name='Fonctionnalités principales')),
                ('demo_url', models.URLField(blank=True, null=True, verbose_name='URL de démonstration')),
                ('github_url', models.URLField(blank=True, null=True, verbose_name='URL GitHub')),
                ('website_url', models.URLField(blank=True, null=True, verbose_name='URL du site web')),
                ('image', models.ImageField(blank=True, null=True, upload_to='projects/', verbose_name='Image principale')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='projects/logos/', verbose_name='Logo du projet')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Projet vedette')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_date', models.DateField(verbose_name='Date de création')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Projet',
                'verbose_name_plural': 'Projets',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du service')),
                ('description', models.TextField(verbose_name='Description')),
                ('short_description', models.CharField(max_length=200, verbose_name='Description courte')),
                ('icon', models.CharField(max_length=50, verbose_name='Icône (classe CSS)')),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/', verbose_name='Image')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('subject', models.CharField(max_length=200, verbose_name='Sujet')),
                ('description', models.TextField(verbose_name='Description du problème')),
                ('priority', models.CharField(choices=[('low', 'Faible'), ('medium', 'Moyenne'), ('high', 'Élevée'), ('urgent', 'Urgente')], default='medium', max_length=20, verbose_name='Priorité')),
                ('status', models.CharField(choices=[('open', 'Ouvert'), ('in_progress', 'En cours'), ('resolved', 'Résolu'), ('closed', 'Fermé')], default='open', max_length=20, verbose_name='Statut')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
            ],
            options={
                'verbose_name': 'Ticket de Support',
                'verbose_name_plural': 'Tickets de Support',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('position', models.CharField(max_length=100, verbose_name='Poste')),
                ('company', models.CharField(max_length=100, verbose_name='Entreprise')),
                ('content', models.TextField(verbose_name='Témoignage')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='testimonials/', verbose_name='Photo')),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=5, verbose_name='Note')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Témoignage vedette')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Témoignage',
                'verbose_name_plural': 'Témoignages',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Value',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Titre')),
                ('description', models.TextField(verbose_name='Description')),
                ('icon', models.CharField(max_length=50, verbose_name='Icône (classe CSS)')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Valeur',
                'verbose_name_plural': 'Valeurs',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ProjectImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='projects/gallery/', verbose_name='Image')),
                ('caption', models.CharField(blank=True, max_length=200, verbose_name='Légende')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordre')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='website.project', verbose_name='Projet')),
            ],
            options={
                'verbose_name': 'Image de Projet',
                'verbose_name_plural': 'Images de Projets',
                'ordering': ['order'],
            },
        ),
    ]
